# Caddy Proxy Configuration
{{- $globals := dict }}
{{- $_ := set $globals "Env" $.Env }}
{{- $_ := set $globals "proxy_ssl_email" (coalesce $globals.Env.CADDY_SSL_EMAIL "internal") }}

{
    storage file_system {{ $globals.Env.CADDY_DATA_DIR }}
}

:443 {
    tls internal {
    	on_demand
    }

    root * /usr/share/caddy

    file_server
}

{{ range $host, $containers := groupByMulti $ "Env.PROXY_HTTP_HOST" "," }}
{{ $host }} {
    tls {{ $globals.proxy_ssl_email }} {
    	on_demand
    }

    reverse_proxy {
        health_uri /
{{ range $index, $value := $containers }}

    {{ $addrLen := len $value.Addresses }}
    {{ $network := index $value.Networks 0 }}

    {{/* If only 1 port exposed, use that */}}
    {{ if eq $addrLen 1 }}
        {{ with $address := index $value.Addresses 0 }}
        # {{$value.Name}}
        to {{ $network.IP }}:{{ $address.Port }}
        {{ end }}

    {{/* If more than one port exposed, use the one matching PROXY_HTTP_CONTAINER_PORT env var */}}
    {{ else if $value.Env.PROXY_HTTP_CONTAINER_PORT }}
        {{ range $i, $address := $value.Addresses }}
            {{ if eq $address.Port $value.Env.PROXY_HTTP_CONTAINER_PORT }}
        # {{$value.Name}}
        to {{ $network.IP }}:{{ $address.Port }}
            {{ end }}
        {{ end }}

    {{/* Else default to standard web port 80 */}}
    {{ else }}
        {{ range $i, $address := $value.Addresses }}
            {{ if eq $address.Port "80" }}
        # {{$value.Name}}
        to {{ $network.IP }}:{{ $address.Port }}
            {{ end }}
        {{ end }}
    {{ end }}
{{ end }}
{{ range $server, $containers := groupByMulti $containers "Env.PROXY_HTTP_UPSTREAMS" "," }}
        # external upstream: {{ $server }}
        to {{ $server }}
{{ end }}
    }
}
{{ end }}
